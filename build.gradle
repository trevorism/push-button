buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.4.5'
    }
}

plugins {
    id "groovy"
    id "war"
    id "jacoco"
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'com.google.cloud.tools.appengine'

def creds = {
    username = findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
    password = findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
}

repositories {
    mavenCentral()
    maven {
        url uri("https://maven.pkg.github.com/trevorism/secure-http-utils")
        credentials creds
    }
    maven {
        url uri("https://maven.pkg.github.com/trevorism/datastore-client")
        credentials creds
    }
    maven {
        url uri("https://maven.pkg.github.com/trevorism/eventhub-client")
        credentials creds
    }
}

def jerseyVersion = "2.37"

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.5.15'

    implementation "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    implementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.13.4'

    implementation 'com.trevorism:secure-http-utils:0.9.0'
    implementation 'com.trevorism:datastore-client:2.5.0'
    implementation 'com.trevorism:eventhub-client:2.4.0'

    implementation 'io.swagger:swagger-jersey2-jaxrs:1.6.6'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.slf4j:slf4j-nop:1.7.36'

    testImplementation 'junit:junit:4.13.2'
}

appengine {
    deploy {
        projectId = "trevorism-pushbutton"
        version = "0-6-0"
        stopPreviousVersion = true
        promote = true
    }
}

check {
    dependsOn('jacocoTestReport')
}

task deliver {
    dependsOn("build","appengineDeploy")
    appengineDeploy.mustRunAfter("check")
}

node {
    version = '12.11.1'
    npmVersion = '6.12.0'
    download = false
    nodeModulesDir = file("${project.projectDir}/src/app")
}

task installNodeDependencies(type: NpmTask) {
    group = "npm"
    args = ['install']
}

task buildApp(type: NpmTask) {
    dependsOn('installNodeDependencies')
    group = "npm"
    args = ['run', 'build']
}

task testApp(type: NpmTask) {
    group = "npm"
    args = ['test']
}

task runApp(type: NpmTask) {
    group = "npm"
    args = ['run','dev']
}

war{
    from "${buildDir}/dist"
}

war.dependsOn("buildApp")